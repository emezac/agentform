<% content_for :title, @form.name %>

<div data-controller="question-response form-animation" 
     data-question-response-question-id-value="<%= @current_question&.id %>"
     data-question-response-form-token-value="<%= @form.share_token %>"
     data-question-response-required-value="<%= @current_question&.required? %>"
     data-form-animation-current-step-value="<%= @form_response.current_question_position %>"
     data-form-animation-total-steps-value="<%= @total_questions %>"
     class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-8 px-4 max-w-2xl mx-auto"
     data-form-animation-target="questionContainer">
  
  <!-- Form header -->
  <div class="mb-8">
    <% if @form.name.present? %>
      <h1 class="text-2xl font-bold text-gray-900 mb-2"><%= @form.name %></h1>
    <% end %>
    
    <% if @form.description.present? %>
      <p class="text-gray-600 leading-relaxed"><%= simple_format(@form.description) %></p>
    <% end %>
    
    <!-- Progress indicator -->
    <% if @total_questions > 1 %>
      <div class="mt-6" data-form-animation-target="progressBar">
        <div class="flex items-center justify-between text-sm text-gray-600 mb-2">
          <span class="font-medium">Question <%= @form_response.current_question_position %> of <%= @total_questions %></span>
          <span class="text-indigo-600 font-semibold"><%= @progress_percentage.round %>% complete</span>
        </div>
        <div class="w-full bg-gray-200 rounded-full h-2 overflow-hidden">
          <div class="bg-gradient-to-r from-indigo-500 to-purple-600 h-2 rounded-full transition-all duration-500 ease-out" 
               style="width: <%= @progress_percentage %>%"
               data-form-animation-target="progressFill">
          </div>
        </div>
      </div>
    <% end %>
  </div>
  
  <!-- Question content -->
  <% if @current_question %>
    <%= form_with url: form_answer_path(@form.share_token), 
                  method: :post, 
                  local: false,
                  data: { 
                    action: "submit->question-response#submitAnswer",
                    turbo_frame: "question-frame"
                  },
                  class: "space-y-6" do |form| %>
      
      <%= hidden_field_tag :question_id, @current_question.id %>
      <%= hidden_field_tag "answer[started_at]", Time.current.iso8601, 
                          data: { "question-response-target": "startedAt" } %>
      
      <!-- Question -->
      <div class="space-y-4">
        <div class="flex items-start space-x-2">
          <% if @current_question.required? %>
            <span class="text-red-500 text-lg leading-6">*</span>
          <% end %>
          
          <div class="flex-1">
            <label class="block text-lg font-medium text-gray-900 leading-relaxed">
              <%= @current_question.title %>
            </label>
            
            <% if @current_question.description.present? %>
              <p class="mt-2 text-sm text-gray-600">
                <%= simple_format(@current_question.description) %>
              </p>
            <% end %>
            
            <!-- AI Enhancement indicator -->
            <% if @current_question.ai_enhanced? %>
              <div class="mt-2 flex items-center space-x-1 text-xs text-purple-600">
                <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
                <span>AI Enhanced</span>
              </div>
            <% end %>
          </div>
        </div>
        
        <!-- Question input based on type -->
        <div class="mt-6 p-6 bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-300" 
             data-form-animation-target="questionInput">
          <%= render "question_types/#{@current_question.question_type}", 
                     question: @current_question, 
                     form: form,
                     config: @question_config %>
        </div>
        
        <!-- Validation errors display -->
        <div id="validation-errors" class="hidden">
          <div class="bg-red-50 border border-red-200 rounded-md p-3">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">Please correct the following:</h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul id="error-list" class="list-disc list-inside space-y-1"></ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Navigation buttons -->
      <div class="flex items-center justify-between pt-6 mt-6 border-t border-gray-200" 
           data-form-animation-target="navigationButtons">
        <div>
          <% if @form_response.current_question_position > 1 %>
            <%= link_to "#", 
                       class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200",
                       data: { action: "click->question-response#goToPrevious" } do %>
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Previous
            <% end %>
          <% end %>
        </div>
        
        <div class="flex items-center space-x-3">
          <!-- Save draft button (if enabled) -->
          <% if @form.form_settings.dig('allow_save_draft') %>
            <%= button_tag type: :button,
                          class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200",
                          data: { action: "click->question-response#saveDraft" } do %>
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3-3m0 0l-3 3m3-3v12"></path>
              </svg>
              Save Draft
            <% end %>
          <% end %>
          
          <!-- Continue/Submit button -->
          <%= button_tag class: "inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-lg text-white bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5",
                        data: { "question-response-target": "submitButton" } do %>
            <span data-question-response-target="submitText">
              <%= @form_response.current_question_position == @total_questions ? "Complete Form" : "Continue" %>
            </span>
            
            <% if @form_response.current_question_position < @total_questions %>
              <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            <% else %>
              <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
            <% end %>
            
            <!-- Loading spinner -->
            <svg class="hidden animate-spin -mr-1 ml-2 h-5 w-5 text-white" 
                 data-question-response-target="loadingSpinner"
                 fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          <% end %>
        </div>
      </div>
    <% end %>
  <% else %>
    <!-- No more questions - this shouldn't normally be reached -->
    <div class="text-center py-12">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">Form Complete</h2>
      <p class="text-gray-600 mb-6">Thank you for your responses!</p>
      <%= link_to "View Results", thank_you_form_path(@form.share_token), 
                 class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700" %>
    </div>
  <% end %>
</div>

<!-- Dynamic questions container -->
<div id="budget_adaptation_<%= @form_response.id %>" 
     class="mt-6 space-y-4">
  <!-- Dynamic budget adaptation questions will appear here -->
</div>

<%= turbo_stream_from @form_response %>

<!-- Auto-save functionality (if enabled) -->
<% if @form.form_settings.dig('auto_save') %>
  <script>
    // Auto-save draft every 30 seconds
    setInterval(function() {
      const controller = document.querySelector('[data-controller="question-response"]');
      if (controller && controller.questionResponseController) {
        controller.questionResponseController.autoSaveDraft();
      }
    }, 30000);
  </script>
<% end %>
<!-- Add this script to the end of your app/views/responses/show.html.erb -->

<script>
// Ensure WebSocket is connected before allowing form submission
document.addEventListener('DOMContentLoaded', function() {
  console.log('Waiting for Turbo Stream connection...');
  
  // Check if we're connected to Turbo Streams
  function isTurboStreamConnected() {
    // Look for the turbo cable element or connection indicator
    return document.querySelector('[data-turbo-cable-url]') && 
           window.Turbo && 
           document.body.hasAttribute('data-turbo-cable-connected');
  }
  
  // Wait for connection before enabling form
  let connectionCheckInterval = setInterval(function() {
    const isConnected = isTurboStreamConnected();
    console.log('Turbo Stream connected:', isConnected);
    
    if (isConnected) {
      console.log('✓ Turbo Stream connection established');
      clearInterval(connectionCheckInterval);
      
      // Mark as ready for dynamic questions
      document.body.setAttribute('data-websocket-ready', 'true');
      
      // If there are any pending broadcasts, they should work now
      console.log('Ready to receive dynamic questions');
    }
  }, 100);
  
  // Stop checking after 10 seconds
  setTimeout(function() {
    clearInterval(connectionCheckInterval);
    console.log('Connection check timeout - proceeding anyway');
    document.body.setAttribute('data-websocket-ready', 'true');
  }, 10000);
  
  // Monitor for incoming Turbo Streams
  document.addEventListener('turbo:before-stream-render', function(event) {
    console.log('=== Turbo Stream received ===');
    console.log('Action:', event.detail.newStream.action);
    console.log('Target:', event.detail.newStream.target);
    
    // Check if it's our budget adaptation target
    if (event.detail.newStream.target.includes('budget_adaptation_')) {
      console.log('✓ Budget adaptation question received!');
    }
  });
  
  // Also listen for successful rendering
  document.addEventListener('turbo:stream-render', function(event) {
    console.log('✓ Turbo Stream rendered successfully');
    
    // Check if our target now has content
    const budgetTarget = document.querySelector('[id^="budget_adaptation_"]');
    if (budgetTarget && budgetTarget.innerHTML.trim()) {
      console.log('✓ Budget adaptation content is now visible');
    }
  });
});
</script>