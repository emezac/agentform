<div class="space-y-3">
  <div class="flex items-center justify-center">
    <label class="flex items-center space-x-3 p-4 border-2 border-gray-200 rounded-lg hover:border-indigo-300 hover:bg-indigo-50 cursor-pointer transition-all duration-200 toggle-container">
      <%= form.check_box "answer[value]", 
                        { 
                          class: "sr-only",
                          data: { 
                            "question-response-target": "answerInput",
                            "action": "change->question-response#validateInput"
                          }
                        },
                        "true",
                        "false" %>
      
      <div class="flex items-center space-x-3">
        <div class="relative">
          <div class="w-12 h-6 bg-gray-300 rounded-full shadow-inner toggle-bg"></div>
          <div class="absolute top-0.5 left-0.5 w-5 h-5 bg-white rounded-full shadow transform transition-transform duration-200 toggle-dot"></div>
        </div>
        
        <span class="text-lg font-medium text-gray-900 toggle-label">
          <%= config['false_label'] || 'Off' %>
        </span>
      </div>
    </label>
  </div>
  
  <% if config['help_text'] %>
    <p class="text-xs text-gray-500 text-center"><%= config['help_text'] %></p>
  <% end %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const checkbox = document.querySelector('input[type="checkbox"][name="answer[value]"]');
    const toggleBg = document.querySelector('.toggle-bg');
    const toggleDot = document.querySelector('.toggle-dot');
    const toggleLabel = document.querySelector('.toggle-label');
    const toggleContainer = document.querySelector('.toggle-container');
    
    const trueLabel = '<%= config['true_label'] || 'On' %>';
    const falseLabel = '<%= config['false_label'] || 'Off' %>';
    
    function updateToggle() {
      if (checkbox && checkbox.checked) {
        toggleBg.classList.remove('bg-gray-300');
        toggleBg.classList.add('bg-indigo-500');
        toggleDot.classList.add('translate-x-6');
        toggleLabel.textContent = trueLabel;
        toggleContainer.classList.add('border-indigo-500', 'bg-indigo-50');
        toggleContainer.classList.remove('border-gray-200');
      } else {
        toggleBg.classList.remove('bg-indigo-500');
        toggleBg.classList.add('bg-gray-300');
        toggleDot.classList.remove('translate-x-6');
        toggleLabel.textContent = falseLabel;
        toggleContainer.classList.remove('border-indigo-500', 'bg-indigo-50');
        toggleContainer.classList.add('border-gray-200');
      }
    }
    
    if (checkbox) {
      checkbox.addEventListener('change', updateToggle);
      updateToggle(); // Initialize state
    }
  });
</script>