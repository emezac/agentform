# SuperAgent A2A Configuration
# Generated by rails generate super_agent:a2a_server

SuperAgent.configure do |config|
  # A2A Server Settings
  config.a2a_server_enabled = <%= Rails.env.production? ? 'true' : 'false' %>
  config.a2a_server_port = <%= server_port %>
  config.a2a_server_host = '<%= server_host %>'
<% if auth_enabled? -%>
  config.a2a_auth_token = ENV['SUPER_AGENT_A2A_TOKEN'] || '<%= secret_token %>'
<% end -%>

<% if ssl_enabled? -%>
  # SSL Configuration
  config.a2a_ssl_cert_path = ENV['SSL_CERT_PATH'] || Rails.root.join('config', 'ssl', 'cert.pem')
  config.a2a_ssl_key_path = ENV['SSL_KEY_PATH'] || Rails.root.join('config', 'ssl', 'key.pem')
<% end -%>

  # A2A Client Settings
  config.a2a_default_timeout = 30
  config.a2a_max_retries = 3
  config.a2a_cache_ttl = 300

  # Base URL for this A2A server (used in Agent Cards)
  config.a2a_base_url = ENV['A2A_BASE_URL'] || "http<%= ssl_enabled? ? 's' : '' %>://<%= server_host %>:<%= server_port %>"

  # Agent Registry - Register known A2A agents
  # Example:
  # config.register_a2a_agent(:inventory_agent, 'http://inventory-service:8080')
  # config.register_a2a_agent(:analytics_agent, 'http://analytics-service:8080', 
  #                          auth: { type: :env, key: 'ANALYTICS_TOKEN' })
end

# Auto-start A2A server in production (optional)
if Rails.env.production? && SuperAgent.configuration.a2a_server_enabled
  require 'super_agent/a2a/server'
  
  Thread.new do
    ssl_config = nil
<% if ssl_enabled? -%>
    if SuperAgent.configuration.a2a_server_ssl_enabled?
      ssl_config = {
        cert_path: SuperAgent.configuration.a2a_ssl_cert_path,
        key_path: SuperAgent.configuration.a2a_ssl_key_path
      }
    end
<% end -%>
    
    server = SuperAgent::A2A::Server.new(
      port: SuperAgent.configuration.a2a_server_port,
      host: SuperAgent.configuration.a2a_server_host,
      auth_token: SuperAgent.configuration.a2a_auth_token,
      ssl_config: ssl_config
    )
    
    server.register_all_workflows
    server.start
  rescue => e
    Rails.logger.error "Failed to start A2A server: #{e.message}"
    Rails.logger.error e.backtrace.join("\n")
  end
end